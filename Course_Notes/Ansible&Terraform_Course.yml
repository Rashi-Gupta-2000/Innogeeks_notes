# ANSIBLE
  - Create 3 Nodes of Linux Machine on local environment
  
Make a file inventory.txt
  target 1 ansible_host = 192.168.88.144 ansible_user=mayur ansible_ssh_pass=mayur ansible_port=22 ansible_connection=ssh
  # target 2 ansible_host = 192.168.88.144 ansible_user=mayur ansible_ssh_pass=mayur ansible_port=22 ansible_connection=ssh

sudo nano inventory.txt
ansible target1 -m ping -i inventory.txt
ansible target2 -m ping -i inventory.txt
ansible all -m ping1 -i inventory.txt

yml file for ansible -- sudo nano ansible_copy.yml --> ANSIBLE PLAYBOOK

- 
  name: Copy File Demo
  hotes: all
  tasks: 
    - name: Copy Local Text file to Destination Path
      copy: 
        src: ./1.txt
        dest: /test/1.txt
        owner: mayur
        group: mayur
        mode: '0577'

1.txt --> Hi!!!! Welcome to ansible
ansible-playbook ansible_copy.yml -i inventory.txt

# small project

ansible_lamp.yml

- 
  name: Installation of LAMP
  become: true
  remote_user: mayur
  # remote_password: mayur
  hotes: all
  tasks: 
    - name: Install Prereq.
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes

    - name: Install Apache Web Server
      apt: name=apache2 update_cache=yes state=latest

    - name: Create an index file on the /var/www/html/
      copy: 
        src: ./index.html
        dest: /var/www/html/index.html
        owner: mayur
        group: mayur
        mode: '0755'

ansible-playbook ansible_copy.yml -i inventory.txt --ask-become-pass


# TERRAFORM

- Installation from website
- add the exe to class path on windows 
- developed by HashiCorp (opensource)
  - Terraform HCL (HashiCorp Configuration Language)


AWS 
  - iam 
    - get the access codes
  
cd TerraformClass/aws/
terraform init
terraform apply

# main.tf

variable "myvar"{
    type = string
    default = "Hello Terraform" 
}

variable "mymap" {
    type = map(string)
    default = {
        mykey = "My Value"
    }
}

# aws-ec2.tf

provider "aws" {
    access_key = "AKIA4DWVZTGT5NMUVWMF"
    secret_key = "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"
    region     = "us-east-1"
}

resource "aws_instance" "myubuntu1" {
    ami           =  "ami-09d56f8956ab235b3"
    instance_type = "t2.micro"
}

resource "aws_s3_bucket" "innotestterraform" {
    bucket = "innotestterraform"
    acl = "private"
    versioning {
        enabled = true
    }
    tags ={
        Name = "Inno Bucket"
        Environment = "Dev Instance"
    }
}